<?php
class society_appModule extends baseModule{
    //获取登录用户的ID
    protected static function getUserId(){
        $user_id = intval($GLOBALS['user_info']['id']);
        if (!$user_id) {
            ajax_return(array(
                'status' => 0,
                'error'  => '未登录',
            ));
        }
        return $user_id;
    }
    
    //加入公会申请  与退出公会申请  列表
    //接收的变量；公会ID；0加入申请1退出申请；1排除加入成功4排除退会成功；当前页；显示页
    public function out_join($root,$society_id,$apply_type,$s_status,$page,$page_size){
        if($root['type'] == 1){//会长才可以查看
            //获取总条数
            $count = $GLOBALS['db']->getOne("select count(*) from ".DB_PREFIX."society_apply s inner join ".DB_PREFIX."user u on s.user_id=u.id where s.society_id=".$society_id." and s.apply_type=".$apply_type." and s.status !=".$s_status.";", true, true);
            $page_total = ceil($count/$page_size);//总页数
            $limit = (($page - 1) * $page_size) . "," . $page_size;//分页
    
            //查询公会申请表
            $sql5 = "select s.status,s.user_id,u.head_image,u.nick_name,u.user_level,u.sex from ".DB_PREFIX."society_apply s inner join ".DB_PREFIX."user u on s.user_id=u.id where s.society_id=".$society_id." and s.apply_type=".$apply_type." and s.status !=".$s_status." limit ".$limit.";";
            
            $res5 = $GLOBALS['db']->getAll($sql5);
            if(empty($res5)){
                $root['list'] = [];
            }else{
                $list = array();
                foreach ($res5 as $key5=>$val5){
                    $list['user_status']   = intval($val5['status']);
                    $list['user_id']       = intval($val5['user_id']);
                    $list['user_image']    = get_spec_image($val5['head_image']);
                    $list['user_name']     = $val5['nick_name'];
                    $list['user_position'] = 3;
                    $list['user_sex']      = intval($val5['sex']);
                    $list['user_lv']       = intval($val5['user_level']);
                    $list['live_in']       = 0;
                    $list['room_id']       = 0;
                    $list['group_id']      = 0;
                    $root['list'][]        = $list;
                    
                }
                 
            }
            $has_next = ($count > $page * $page_size) ? '1' : '0';//是否有下一页
            $root['page'] = array('page'=>$page,'page_total'=>$page_total,'has_next' => $has_next);
        }else{
            $root['status'] = 0;
            $root['error'] = "你不是会长无法显示加入申请列表";
        }
        return $root;
    }
    
    //公会详情
    public function society_details(){
        $root = array(
            'status'=> 1,
            'error' => ''
        );
        $user_id = self::getUserId();//获取当前登录的用户ID
        $society_id = intval($_REQUEST['society_id']?$_REQUEST['society_id']:0);//请求公会的ID
        if($society_id != 0){
            //查询公会信息
            $sql2 = "select s.id,s.logo,s.manifesto,s.name,u.nick_name,u.id as uid,s.user_id,s.status from ".DB_PREFIX."society s inner join ".DB_PREFIX."user u on s.user_id=u.id where s.id=".$society_id.";";
            $res2 = $GLOBALS['db']->getRow($sql2);
            if(!empty($res2)){
                $root['society_id']       = intval($res2['id']);
                $root['society_image']    = get_spec_image($res2['logo']);
                $root['society_name']     = $res2['name'];
                $root['society_explain']  = $res2['manifesto'];
                $root['society_chairman'] = $res2['nick_name'];
                $root['user_count']       = intval($GLOBALS['db']->getOne("select count(*) from ".DB_PREFIX."user where society_id=".$res2['id'].";"));
                $root['join_count']       = intval($GLOBALS['db']->getOne("select count(*) from ".DB_PREFIX."society_apply where society_id=".$res2['id']." and apply_type=0 and status=0;"));
                $root['out_count']        = intval($GLOBALS['db']->getOne("select count(*) from ".DB_PREFIX."society_apply where society_id=".$res2['id']." and apply_type=1 and status=3;"));
                $root['gh_status']        = intval($res2['status']);
            }else{
                $root['status'] = 0;
                $root['error']  = "公会信息获取失败";
            }
            //获取用户的公会ID
            $sql = "select society_id from ".DB_PREFIX."user where id=".$user_id.";";
            $res = $GLOBALS['db']->getOne($sql);
            //判断访问公会人员的身份
            if($user_id == $res2['uid']){//会长
                $root['type'] = 1;
            }elseif($res == $society_id){
                $sql2 = "select id from ".DB_PREFIX."society_apply where user_id=".$user_id." and society_id=".$society_id." and apply_type=1;";
                $res2 = $GLOBALS['db']->getOne($sql2);
                if(empty($res2)){//会员
                    $root['type'] = 0;
                }else{//申请退出公会人员
                    $root['type'] = 5;
                }
            }else{
                if($res != 0 && $res != $society_id){//其他公会成员
                    $root['type'] = 2;
                }else{
                    $sql4 = "select id from ".DB_PREFIX."society_apply where user_id=".$user_id." and society_id=".$society_id." and apply_type=0 and status=0;";
                    $res4 = $GLOBALS['db']->getOne($sql4);
                    if(empty($res4)){//无公会人员
                        $root['type'] = 3;
                    }else{//申请入会人员
                        $root['type'] = 4;
                    }
            
                }
            }
            
            
            $status = intval($_REQUEST['society_status']?$_REQUEST['society_status']:0);//请求列表ID  0成员列表，1申请列表，2退出列表
            $page = $_REQUEST['page']?$_REQUEST['page']:1;//当前页  
            $page_size = 20;//分页数量
            if($status == 0){//获取成员列表
                //获取总条数
                $count = $GLOBALS['db']->getOne("select count(*) from ".DB_PREFIX."user u where society_id=".$society_id, true, true);
                $page_total = ceil($count/$page_size);//总页数
                $limit = (($page - 1) * $page_size) . "," . $page_size;//分页
                //该公会成员信息
                $sql3 = "select * from (select u.society_chieftain,u.id,u.head_image,u.nick_name,u.user_level,u.sex,v.live_in,v.id as vid,v.group_id from ".DB_PREFIX."user u left join ".DB_PREFIX."video v on u.id=v.user_id where society_id=".$society_id." ORDER BY v.live_in DESC) as t group by id order by live_in DESC limit ". $limit.";";
                $res3 = $GLOBALS['db']->getAll($sql3);
                foreach ($res3 as $key3=>$val3){
                    $root['list'][$key3]['user_status'] = 1;
                    $root['list'][$key3]['user_id']     = intval($val3['id']);
                    $root['list'][$key3]['user_image']  = get_spec_image($val3['head_image']);
                    $root['list'][$key3]['user_name']   = $val3['nick_name'];
                    if($val3['society_chieftain'] == 1){//判断成员职位  0会员，1会长
                        $root['list'][$key3]['user_position'] = 1;
                    }else{
                        $root['list'][$key3]['user_position'] = 0;
                    }
                    $root['list'][$key3]['user_lv']  = intval($val3['user_level']);
                    $root['list'][$key3]['user_sex'] = intval($val3['sex']);
                    
                    if($val3['live_in'] == 1){//判断是否在直播
                        $root['list'][$key3]['live_in']  = intval($val3['live_in']);
                        $root['list'][$key3]['room_id']  = intval($val3['vid']);
                        $root['list'][$key3]['group_id'] = intval($val3['group_id']);
                    }else{
                        $root['list'][$key3]['live_in']  = 0;
                        $root['list'][$key3]['room_id']  = 0;
                        $root['list'][$key3]['group_id'] = 0;
                    }
                }
                $has_next = ($count > $page * $page_size) ? '1' : '0';//是否有下一页
                $root['page'] = array('page'=>$page,'page_total'=>$page_total,'has_next' => $has_next);
                
            }elseif ($status == 1){//获取加入申请列表
                $root = $this->out_join($root,$society_id,0,1,$page,$page_size);
            }elseif ($status == 2){//获取退出申请列表
                $root = $this->out_join($root,$society_id,1,4,$page,$page_size);
            }else{
                $root['status'] = 0;
                $root['error'] = "列表数据获取失败";
            }
        }else {
            $root['status'] = 0;
            $root['error'] = "公会ID获取失败";
        }
        ajax_return($root);
    }
    
    //判断操作人员身份
    //公会ID，操作人员ID
    public function judge_user($society_id,$user_id){
        //查询公会信息
        $sql2 = "select s.id,s.logo,s.manifesto,s.name,u.nick_name,u.id as uid,s.user_id from ".DB_PREFIX."society s inner join ".DB_PREFIX."user u on s.user_id=u.id where s.id=".$society_id.";";
        $res2 = $GLOBALS['db']->getRow($sql2);
        if(!empty($res2)){
            //获取用户的公会ID
            $sql = "select society_id from ".DB_PREFIX."user where id=".$user_id.";";
            $res = $GLOBALS['db']->getOne($sql);
            //判断访问公会人员的身份
            $dateR = '';
            if($res == 0){//未加入公会成员
                $dateR = 0;
            }elseif($res == $society_id) {//本公会成员
                if($user_id == $res2['uid']){//会长
                    $dateR = 2;
                }else {//会员
                    $dateR = 1;
                }
            }else{//其他公会成员
                $dateR = 3;
            }
        }else{
            $dateR = 4;
        }
        return $dateR;
    }
    
    //入会和退会的数据写入
    //等人用户ID，公会ID，0入会1退会
    public function outJoinR($user_id,$society_id,$type){
        $root['status'] = 1;
        $root['error'] = "";
        $oTime = time();//获取当前时间戳
        //先查询一下申请是否已存在
        if($type == 0){//入会
            $res = $GLOBALS['db']->getOne("select id from ".DB_PREFIX."society_apply where user_id=".$user_id." and society_id=".$society_id.";");
        }else{//退会
            $res = $GLOBALS['db']->getOne("select id from ".DB_PREFIX."society_apply where user_id=".$user_id." and status !=1;");
        }
        if(empty($res)){
            if($type == 0){
                $status = 0;
            }else{
                $status = 3;
            }
            $res1 = $GLOBALS['db']->autoExecute(DB_PREFIX . 'society_apply',
            array('society_id'=>$society_id,'user_id'=>$user_id,'create_time'=>$oTime,'apply_type'=>$type,'status'=>$status));
            if($res1){
                $root['error']  = "申请已提交,等待审核";
            }else {
                $root['status'] = 0;
                $root['error']  = "数据插入失败";
            }
        }else{
            $root['error'] = "您已提交申请了，请不要重复提交";
        }
        return $root;
    }
    
    //入会和退会 操作
    //操作用户的id，公会id，1退会0入会操作
    public function op_outJoin($user_id,$society_id,$type){
        $root = array(
            'status'=> 1,
            'error' => ''
        );
        if($society_id != 0){
            $dateR = $this->judge_user($society_id,$user_id);//身份校验
            if($type == 0){//入会申请
                if($dateR == 0){
                    $root = $this->outJoinR($user_id,$society_id,$type);
                }elseif ($dateR == 3){
                    $root['error'] = "抱歉您已经有公会了，无法申请加入";
                }else {
                    $root['error'] = "您已经是本公会成员了，无需申请";
                }
            }elseif ($type == 1){//退会申请
                if($dateR == 1){
                    $root = $this->outJoinR($user_id,$society_id,$type);
                }elseif ($dateR == 2){
                    $root['error'] = "抱歉您是会长，无法申请退出";
                }else {
                    $root['error'] = "您不是本公会成员，无法申请";
                }
            }
            
        }else{
            $root['status'] = 0;
            $root['error'] = "公会ID获取失败";
        }
        return $root;
    }
    
    //申请加入公会
    public function society_join(){
        $user_id = self::getUserId();//获取当前登录的用户ID
        $society_id = intval($_REQUEST['society_id']?$_REQUEST['society_id']:0);//请求公会的ID
        $root = $this->op_outJoin($user_id, $society_id, 0);//申请操作
        ajax_return($root);
    }
    
    //申请退出公会
    public function society_out(){
        $user_id = self::getUserId();//获取当前登录的用户ID
        $society_id = intval($_REQUEST['society_id']?$_REQUEST['society_id']:0);//请求公会的ID
        $root = $this->op_outJoin($user_id, $society_id, 1);//退会操作
        ajax_return($root);
    }
    
    //会长操作入会和退会
    //公会ID，被操作人员ID，0入会1退会
    public function President($society_id,$user_id,$type){
        $root = array(
            'status'=> 1,
            'error' => ''
        );
        $dateR = $this->judge_user($society_id,$user_id);//身份校验
        if($dateR == 2){
            $applyFor_id = intval($_REQUEST['applyFor_id']);//被操作人员id
            if($applyFor_id != 0){
                $is_agree = intval($_REQUEST['is_agree']);//是否同意
                if($is_agree == 1){//同意
                    if($type == 0){//入会
                        //判断该成员是否正有公会
                        $res1 = $GLOBALS['db']->getOne("select id from ".DB_PREFIX."society where user_id=".$applyFor_id.";");
                        if(empty($res1)){
                            $status = 1;
                            $GLOBALS['db']->autoExecute(DB_PREFIX . 'society_apply', array('status' => 1), 'UPDATE', 'user_id='.$applyFor_id);
                            $GLOBALS['db']->autoExecute(DB_PREFIX . 'user', array('society_id' => $society_id), 'UPDATE', "id=".$applyFor_id.";");
                            //公会总人数+1
                            $update_society = "UPDATE ".DB_PREFIX."society set user_count=user_count+1 where id=".$society_id;
                            $GLOBALS['db']->query($update_society);
                            
                            $root['error']  = "申请已通过";
                        }else{
                            $root['error']  = "操作失败，该成员已有公会";
                        }
                        
                    }else{//退会
                        $status = 4;
                        $GLOBALS['db']->autoExecute(DB_PREFIX . 'user', array('society_id' => 0), 'UPDATE', "id=".$applyFor_id.";");
                        //公会总人数-1
                        $update_society = "UPDATE ".DB_PREFIX."society set user_count=user_count-1 where id=".$society_id;
                        $GLOBALS['db']->query($update_society);
                        $GLOBALS['db']->query("delete from " . DB_PREFIX . "society_apply where user_id=".$applyFor_id);
                        $root['error']  = "申请已通过";
                    }
                    //$res = $GLOBALS['db']->autoExecute(DB_PREFIX . 'society_apply', array('status' => $status), 'UPDATE', "society_id=".$society_id." and user_id=".$applyFor_id." and apply_type=".$type.";");
                    //$GLOBALS['db']->query("delete from " . DB_PREFIX . "society_apply where user_id=".$applyFor_id);
                    
                }elseif ($is_agree == 0){//拒绝 
                    if($type == 1){//退会
                        $status = 2;
                        //$res = $GLOBALS['db']->query("delete from " . DB_PREFIX . "society_apply where user_id=".$applyFor_id);
                        $res = $GLOBALS['db']->autoExecute(DB_PREFIX . 'society_apply', array('status' => 1,'apply_type' => 0), 'UPDATE', "society_id=".$society_id." and user_id=".$applyFor_id.";");
                    }else{//入会
                        $status = 5;
                        $res = $GLOBALS['db']->query("delete from " . DB_PREFIX . "society_apply where user_id=".$applyFor_id." and society_id=".$society_id);
                    }
                    //$res = $GLOBALS['db']->autoExecute(DB_PREFIX . 'society_apply', array('status' => $status), 'UPDATE', "society_id=".$society_id." and user_id=".$applyFor_id." and apply_type=".$type.";");
                    
                    if($res){
                        $root['error']  = "申请被拒绝了";
                    }else {
                        $root['status'] = 0;
                        $root['error']  = "数据更新失败";
                    }
                }   
            }else{
                $root['status'] = 0;
                $root['error']  = "需要操作的成员id获取失败";
            }
        }else{
            $root['status'] = 0;
            $root['error']  = "抱歉您不是会长无法操作";
        }
        return $root;
    }
    
    //加入公会审核（会长操作）
    public function join_check(){
        $user_id = self::getUserId();//获取当前登录的用户ID
        $society_id = intval($_REQUEST['society_id']?$_REQUEST['society_id']:0);//请求公会的ID
        $root = $this->President($society_id, $user_id, 0);//执行操作
        ajax_return($root);
    }
    
    //退出公会审核（会长操作）
    public function out_check(){
        $user_id = self::getUserId();//获取当前登录的用户ID
        $society_id = intval($_REQUEST['society_id']?$_REQUEST['society_id']:0);//请求公会的ID
        $root = $this->President($society_id, $user_id, 1);//执行操作
        ajax_return($root);
    }
    
    //踢出公会成员（会长操作）
    public function member_del(){
        $user_id = self::getUserId();//获取当前登录的用户ID
        $society_id = intval($_REQUEST['society_id']?$_REQUEST['society_id']:0);//请求公会的ID
        $dateR = $this->judge_user($society_id,$user_id);//身份校验
        if($dateR == 2){//会长
            $member_id = intval($_REQUEST['member_id']?$_REQUEST['member_id']:0);//被踢成员ID
            if ($member_id != 0){
                $res = $GLOBALS['db']->autoExecute(DB_PREFIX . 'user',array('society_id'=>0),'UPDATE',"id=".$member_id.";");
                if($res){
                    $res1 = $GLOBALS['db']->getOne("select id from ".DB_PREFIX."society_apply where user_id=".$member_id." and society_id=".$society_id.";");
                    if(!empty($res1)){//踢出公会，判断该成员是否曾经申请退会，是，同时删除
                        $GLOBALS['db']->query("delete from " . DB_PREFIX . "society_apply where user_id=".$member_id." and society_id=".$society_id);
                    }
                    //公会总人数-1
                    $update_society = "UPDATE ".DB_PREFIX."society set user_count=user_count-1 where id=".$society_id;
                    $GLOBALS['db']->query($update_society);
                    
                    $root['status'] = 1;
                    $root['error']  = "该公会成员已移除";
                }else{
                    $root['status'] = 0;
                    $root['error']  = "踢出成员数据更新失败";
                }
            }else{
                $root['status'] = 0;
                $root['error']  = "被操作成员id获取失败";
            }
        }else{//不是会长
            $root['status'] = 0;
            $root['error']  = "抱歉您不是会长无法操作";
        }
        ajax_return($root);
    }
    
    //重新提交公会申请
    public function society_agree(){
        $root = array(
            'status'=> 1,
            'error' => ''
        );
        $user_id = self::getUserId();//获取当前登录的用户ID
        $society_id = intval($_REQUEST['society_id']?$_REQUEST['society_id']:0);//请求公会的ID
        if($society_id != 0){
            $res = $GLOBALS['db']->autoExecute(DB_PREFIX . 'society', array('status' => 0), 'UPDATE', "id=".$society_id.";");
            if($res){
                $root['error']  = "提交成功等待审核";
            }else{
                $root['status'] = 0;
                $root['error']  = "更新数据失败";
            }
        }else{
            $root['status'] = 0;
            $root['error']  = "公会ID获取失败";
        }
        ajax_return($root);  
    }
}